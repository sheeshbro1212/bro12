local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Beamed v2 " .. Fluent.Version,
    SubTitle = "by ben1x1x1x1x/ben",
    TabWidth = 125,
    Size = UDim2.fromOffset(500, 600),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "Beamed v2 Loaded!",
        SubContent = "SubContent", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })






-- AutoFarm weights (equip any farming tools)
Tabs.Main:AddButton({
    Title = "AutoFarm weights (equip any farming tools)",
    Description = "Activates auto farming with the equipped tools.",
    Callback = function()
        while true do
            local args = {
                [1] = "rep"
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))
            game:GetService("RunService").RenderStepped:Wait()
        end
    end
})

-- Fast weight (client side) (Unequip Weight first!)
Tabs.Main:AddButton({
    Title = "Fast weight (client side)(Unequip Weight first!)",
    Description = "Sets weight value to zero for faster weight gain.",
    Callback = function()
        game:GetService("Players").LocalPlayer.Backpack.Weight:FindFirstChildOfClass("NumberValue").Value = 0
    end
})

-- Claim all chest
Tabs.Main:AddButton({
    Title = "Claim all chests",
    Description = "Teleports to chest locations to claim them.",
    Callback = function()
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer

        local teleportPositions = {
            Vector3.new(41.00082015991211, 7.25372314453125, 413.7836608886719),
            Vector3.new(-2569.714111328125, 7.253732681274414, -552.041259765625),
            Vector3.new(2202.354248046875, 7.253730773925781, 905.2389526367188),
            Vector3.new(-6710.41064453125, 7.253731727600098, -1458.2186279296875),
            Vector3.new(4663.82177734375, 1000.9722290039062, -3698.064208984375)
        }

        local function teleportToPositions()
            local originalPosition = player.Character.HumanoidRootPart.Position

            for _, position in ipairs(teleportPositions) do
                player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
                wait(1) -- Wait for 1 second at each position
            end

            player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
        end

        teleportToPositions()
    end
})


Tabs.Main:AddParagraph({
    Title = "Script Hub",
    Content = "Scripting Hub.\nFor other scripts!"
})

 -- Permanent Shiftlock
Tabs.Main:AddButton({
    Title = "Permanent Shiftlock",
    Description = "Enables permanent shiftlock mode.",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/CjNsnSDy'))()
    end
})

Tabs.Main:AddParagraph({
    Title = "Misc",
    Content = "other stuffs.\nMisc!"
})

-- Morning
Tabs.Main:AddButton({
    Title = "Morning",
    Description = "Sets the time to morning (7 AM).",
    Callback = function()
        game.Lighting.ClockTime = 7
    end
})

-- Daytime
Tabs.Main:AddButton({
    Title = "Daytime",
    Description = "Sets the time to daytime (8 AM).",
    Callback = function()
        game.Lighting.ClockTime = 8
    end
})

-- Night
Tabs.Main:AddButton({
    Title = "Night",
    Description = "Sets the time to night (5 PM).",
    Callback = function()
        game.Lighting.ClockTime = 5
    end
})
   
 

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Beamd v2",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
end

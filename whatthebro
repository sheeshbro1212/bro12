local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library//main/Library", true))()

local window = library:AddWindow("Name GUI", {
	main_color = Color3.fromRGB(41, 74, 122),
	min_size = Vector2.new(250, 346),
	can_resize = false,
})

local servertab = window:AddTab("Features")
features:Show()

local playerData = {}
local currentSelectedPlayer = nil
local notFoundLabel = nil
local selectedPlayerName = nil

local function abbreviateNumber(value)
    if value >= 1e15 then
        return string.format("%.1fQa", value / 1e15)
    elseif value >= 1e12 then
        return string.format("%.1fT", value / 1e12)
    elseif value >= 1e9 then
        return string.format("%.1fB", value / 1e9)
    elseif value >= 1e6 then
        return string.format("%.1fM", value / 1e6)
    elseif value >= 1e3 then
        return string.format("%.1fK", value / 1e3)
    else
        return tostring(value)
    end
end

local function createPlayerLabels(player)
    local playerName = player.Name
    local leaderstats = player:FindFirstChild("leaderstats")
    local equippedPets = player:FindFirstChild("equippedPets")
    local ownedGamepasses = player:FindFirstChild("ownedGamepasses")

    local labels = {
        StrengthLabel = servertab:AddLabel("Strength: " .. abbreviateNumber((leaderstats and leaderstats:FindFirstChild("Strength") and leaderstats.Strength.Value) or 0)),
        DurabilityLabel = servertab:AddLabel("Durability: " .. abbreviateNumber((player:FindFirstChild("Durability") and player.Durability.Value) or 0)),
        KillsLabel = servertab:AddLabel("Kills: " .. abbreviateNumber((leaderstats and leaderstats:FindFirstChild("Kills") and leaderstats.Kills.Value) or 0)),
        BrawlsLabel = servertab:AddLabel("Brawls: " .. abbreviateNumber((leaderstats and leaderstats:FindFirstChild("Brawls") and leaderstats.Brawls.Value) or 0)),
        AgilityLabel = servertab:AddLabel("Agility: " .. abbreviateNumber((player:FindFirstChild("Agility") and player.Agility.Value) or 0)),
        EvilKarmaLabel = servertab:AddLabel("evilKarma: " .. abbreviateNumber((player:FindFirstChild("evilKarma") and player.evilKarma.Value) or 0)),
        GoodKarmaLabel = servertab:AddLabel("goodKarma: " .. abbreviateNumber((player:FindFirstChild("goodKarma") and player.goodKarma.Value) or 0)),
        MapLabel = servertab:AddLabel("Map: " .. ((player:FindFirstChild("currentMap") and player.currentMap.Value) or "N/A")),
        KingTimeLabel = servertab:AddLabel("KingTime: " .. abbreviateNumber((player:FindFirstChild("muscleKingTime") and player.muscleKingTime.Value) or 0)),
        PremiumLabel = servertab:AddLabel("Premium: " .. (player.MembershipType == Enum.MembershipType.Premium and "true" or "false")),
    }

    for i = 1, 5 do
        local petValue = equippedPets and equippedPets:FindFirstChild("pet" .. i) and equippedPets["pet" .. i].Value or "N/A"
        labels["Pet" .. i .. "Label"] = servertab:AddLabel("Pet" .. i .. ": " .. tostring(petValue))
    end

    local gamepassList = {}
    if ownedGamepasses then
        for _, gamepass in ipairs(ownedGamepasses:GetChildren()) do
            table.insert(gamepassList, gamepass.Name)
        end
    end

    local gamepassesText = #gamepassList > 0 and table.concat(gamepassList, ", ") or "N/A"
    labels.GamepassesLabel = servertab:AddLabel("ownedGamepasses: " .. gamepassesText)

    playerData[playerName] = labels

    if leaderstats then
        if leaderstats:FindFirstChild("Kills") then
            leaderstats.Kills.Changed:Connect(function()
                labels.KillsLabel.Text = "Kills: " .. abbreviateNumber(leaderstats.Kills.Value or 0)
            end)
        end
        if leaderstats:FindFirstChild("Strength") then
            leaderstats.Strength.Changed:Connect(function()
                labels.StrengthLabel.Text = "Strength: " .. abbreviateNumber(leaderstats.Strength.Value or 0)
            end)
        end
        if leaderstats:FindFirstChild("Brawls") then
            leaderstats.Brawls.Changed:Connect(function()
                labels.BrawlsLabel.Text = "Brawls: " .. abbreviateNumber(leaderstats.Brawls.Value or 0)
            end)
        end
    end

    if player:FindFirstChild("Durability") then
        player.Durability.Changed:Connect(function()
            labels.DurabilityLabel.Text = "Durability: " .. abbreviateNumber(player.Durability.Value or 0)
        end)
    end

    if player:FindFirstChild("Agility") then
        player.Agility.Changed:Connect(function()
            labels.AgilityLabel.Text = "Agility: " .. abbreviateNumber(player.Agility.Value or 0)
        end)
    end

    if player:FindFirstChild("evilKarma") then
        player.evilKarma.Changed:Connect(function()
            labels.EvilKarmaLabel.Text = "evilKarma: " .. abbreviateNumber(player.evilKarma.Value or 0)
        end)
    end

    if player:FindFirstChild("goodKarma") then
        player.goodKarma.Changed:Connect(function()
            labels.GoodKarmaLabel.Text = "goodKarma: " .. abbreviateNumber(player.goodKarma.Value or 0)
        end)
    end

    if player:FindFirstChild("currentMap") then
        player.currentMap.Changed:Connect(function()
            labels.MapLabel.Text = "Map: " .. (player.currentMap.Value or "N/A")
        end)
    end

    if player:FindFirstChild("muscleKingTime") then
        player.muscleKingTime.Changed:Connect(function()
            labels.KingTimeLabel.Text = "KingTime: " .. abbreviateNumber(player.muscleKingTime.Value or 0)
        end)
    end
end

local function removePlayerLabels(playerName)
    local labels = playerData[playerName]
    if labels then
        for _, label in pairs(labels) do
            label:Remove()
        end
        playerData[playerName] = nil
    end
end

local textbox = servertab:AddTextBox("Player Name", function(playerName)
    selectedPlayerName = playerName
    if notFoundLabel then
        notFoundLabel:Remove()
        notFoundLabel = nil
    end

    local player = game.Players:FindFirstChild(playerName)
    if not player then
        notFoundLabel = servertab:AddLabel("Player not found!")
        selectedPlayerName = nil
    end
end)

servertab:AddButton("Reveal Stats", function()
    local player = game.Players:FindFirstChild(selectedPlayerName)
    if player then
        if currentSelectedPlayer then
            removePlayerLabels(currentSelectedPlayer)
        end
        createPlayerLabels(player)
        currentSelectedPlayer = selectedPlayerName
    else
        if notFoundLabel == nil then
            notFoundLabel = servertab:AddLabel("Player not found!")
        end
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    local playerName = player.Name
    if playerData[playerName] then
        removePlayerLabels(playerName)
    end
    if playerName == selectedPlayerName then
        currentSelectedPlayer = nil
        selectedPlayerName = nil
    end
end)

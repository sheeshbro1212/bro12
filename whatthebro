local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "by dawid",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- Optional: set to true for blur effect
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = Window:AddTab("Main")

-- Add Paragraph using Fluent's AddParagraph
Tabs.Main:AddParagraph({
    Title = "----Script Hub----",
    Content = "Here are some useful features for the game!"
})

-- Add Button using Fluent's AddButton
Tabs.Main:AddButton({
    Title = "AutoFarm weights (equip any farming tools)",
    Description = "Farming tool auto-equipment",
    Callback = function()
        while true do
            local args = {
                [1] = "rep"
            }
            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))
            game:GetService("RunService").RenderStepped:Wait()
        end
    end
})

Tabs.Main:AddButton({
    Title = "Fast weight (client side)(Unequip Weight first!)",
    Description = "Sets weight to 0 for client-side",
    Callback = function()
        game:GetService("Players").LocalPlayer.Backpack.Weight:FindFirstChildOfClass("NumberValue").Value = 0
    end
})

-- Teleport Button
Tabs.Main:AddButton({
    Title = "Claim all chest",
    Description = "Teleports to chest locations",
    Callback = function()
        local player = game:GetService("Players").LocalPlayer
        local teleportPositions = {
            Vector3.new(41.00082015991211, 7.25372314453125, 413.7836608886719),
            Vector3.new(-2569.714111328125, 7.253732681274414, -552.041259765625),
            Vector3.new(2202.354248046875, 7.253730773925781, 905.2389526367188),
            Vector3.new(-6710.41064453125, 7.253731727600098, -1458.2186279296875),
            Vector3.new(4663.82177734375, 1000.9722290039062, -3698.064208984375)
        }

        local function teleportToPositions()
            local originalPosition = player.Character.HumanoidRootPart.Position
            for _, position in ipairs(teleportPositions) do
                player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
                wait(1)
            end
            player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
        end
        teleportToPositions()
    end
})

-- Time Section with Buttons
Tabs.Main:AddParagraph({
    Title = "----Time----",
    Content = "Choose a time to set the lighting."
})

Tabs.Main:AddButton({
    Title = "Morning",
    Description = "Set the time to morning",
    Callback = function()
        game.Lighting.ClockTime = 7
    end
})

Tabs.Main:AddButton({
    Title = "Daytime",
    Description = "Set the time to daytime",
    Callback = function()
        game.Lighting.ClockTime = 8
    end
})

Tabs.Main:AddButton({
    Title = "Night",
    Description = "Set the time to night",
    Callback = function()
        game.Lighting.ClockTime = 5
    end
})

-- Add Fluent Toggle for Auto Brawl with God Mode
local AutoBrawlToggle = Tabs.Main:AddToggle("AutoBrawlGodMode", {
    Title = "Auto Join Brawl (God mode)",
    Default = false
})

AutoBrawlToggle:OnChanged(function()
    if AutoBrawlToggle.Value then
        _G.autobrawl = true
        repeat
            local args = {
                [1] = "joinBrawl"
            }
            game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer(unpack(args))
            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autobrawl
    else
        _G.autobrawl = false
    end
end)

-- Add Fluent Toggle for Auto Join Brawl for Farming
local AutoBrawlFarmToggle = Tabs.Main:AddToggle("AutoBrawlFarming", {
    Title = "Auto Join Brawl (For Farming)",
    Default = false
})

AutoBrawlFarmToggle:OnChanged(function()
    if AutoBrawlFarmToggle.Value then
        _G.autobrawl = true
        repeat
            local args = {
                [1] = "joinBrawl"
            }
            game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer(unpack(args))
            for i = 1, 60 do
                if not _G.autobrawl then break end
                wait(1)
            end
        until not _G.autobrawl
    else
        _G.autobrawl = false
    end
end)

-- Show the window
Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

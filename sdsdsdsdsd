-- Create a ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "KeySystem"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create the main frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 250)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -125)
mainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
mainFrame.BorderSizePixel = 2
mainFrame.BorderColor3 = Color3.fromRGB(85, 170, 255)
mainFrame.Parent = screenGui

-- Add a title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0.2, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
titleLabel.BorderSizePixel = 0
titleLabel.Text = "Key System"
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 24
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Parent = mainFrame

-- Add a textbox for key input
local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(0.8, 0, 0.2, 0)
keyBox.Position = UDim2.new(0.1, 0, 0.3, 0)
keyBox.PlaceholderText = "Enter Key"
keyBox.Text = ""
keyBox.Font = Enum.Font.SourceSans
keyBox.TextSize = 18
keyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
keyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
keyBox.BorderSizePixel = 1
keyBox.BorderColor3 = Color3.fromRGB(85, 170, 255)
keyBox.Parent = mainFrame

-- Add a button for key submission
local submitButton = Instance.new("TextButton")
submitButton.Size = UDim2.new(0.6, 0, 0.2, 0)
submitButton.Position = UDim2.new(0.2, 0, 0.55, 0)
submitButton.Text = "Submit Key"
submitButton.Font = Enum.Font.SourceSansBold
submitButton.TextSize = 18
submitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
submitButton.BackgroundColor3 = Color3.fromRGB(85, 170, 255)
submitButton.Parent = mainFrame

-- Add a notification label for feedback
local notificationLabel = Instance.new("TextLabel")
notificationLabel.Size = UDim2.new(1, 0, 0.1, 0)
notificationLabel.Position = UDim2.new(0, 0, 0.75, 0)
notificationLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
notificationLabel.BorderSizePixel = 0
notificationLabel.Text = ""
notificationLabel.Font = Enum.Font.SourceSansItalic
notificationLabel.TextSize = 14
notificationLabel.TextColor3 = Color3.fromRGB(255, 85, 85)
notificationLabel.Parent = mainFrame

-- Add a button to join the Discord for the key
local discordButton = Instance.new("TextButton")
discordButton.Size = UDim2.new(0.8, 0, 0.2, 0)
discordButton.Position = UDim2.new(0.1, 0, 0.85, 0)
discordButton.Text = "Join the Discord for the Key"
discordButton.Font = Enum.Font.SourceSansBold
discordButton.TextSize = 18
discordButton.TextColor3 = Color3.fromRGB(255, 255, 255)
discordButton.BackgroundColor3 = Color3.fromRGB(85, 85, 255)
discordButton.Parent = mainFrame

-- Correct key
local correctKey = "Beniscool"

-- Function to handle key submission
local function checkKey()
    if keyBox.Text == correctKey then
        notificationLabel.Text = "Access Granted!"
        notificationLabel.TextColor3 = Color3.fromRGB(85, 255, 85)
        wait(1)
        screenGui:Destroy() -- Destroy key system GUI
        showMainGUI() -- Show the main GUI
    else
        notificationLabel.Text = "Invalid Key. Try again."
        notificationLabel.TextColor3 = Color3.fromRGB(255, 85, 85)
    end
end

-- Function to open the Discord invite
local function openDiscordInvite()
    setclipboard("https://discord.gg/JFFp2Y9BEV")
    notificationLabel.Text = "Discord link copied to clipboard!"
    notificationLabel.TextColor3 = Color3.fromRGB(85, 170, 255)
end

-- Connect the button clicks
submitButton.MouseButton1Click:Connect(checkKey)
discordButton.MouseButton1Click:Connect(openDiscordInvite)

-- Function to display the main GUI
function showMainGUI()
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/sheeshbro1212/bro12/refs/heads/main/whatthebro", true))()
local window = library:AddWindow("Beamed V2", {
	main_color = Color3.fromRGB(50, 50, 50), -- Color
    min_size = Vector2.new(405, 490), -- Size of the gui
	can_resize = true, -- true or false
})

local features = window:AddTab("Main")


local folder = features:AddFolder("Auto Brawl")

folder:AddSwitch("Auto Join Brawl (God mode)", function(bool)
    if bool then
        _G.autobrawl = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "joinBrawl"
            }

            game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autobrawl
    else
        _G.autobrawl = false
    end
end)


folder:AddSwitch("Auto Join Brawl (For Farming)", function(bool)
    if bool then
        _G.autobrawl = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "joinBrawl"
            }

            game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer(unpack(args))

            for i = 1, 60 do
                if not _G.autobrawl then break end
                wait(1)
            end
        until not _G.autobrawl
    else
        _G.autobrawl = false
    end
end)


local folder = features:AddFolder("Auto Gym")
folder:AddLabel("King Island")


folder:AddSwitch("Auto Muscle King Bench", function(bool)
    if bool then
        _G.automlking = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Muscle King Bench").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-8593.6884765625, 22.231548309326172, -6061.2900390625)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Muscle King Bench").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.automlking
    else
        _G.automlking = false
    end
end)

-- king 

folder:AddSwitch("Auto Muscle King Squat", function(bool)
    if bool then
        _G.automlking = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Muscle King Squat").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-8758.4794921875, 45.82110595703125, -6042.20263671875)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Muscle King Squat").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.automlking
    else
        _G.automlking = false
    end
end)


folder:AddSwitch("Auto Muscle Boulder", function(bool)
    if bool then
        _G.automlking = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("King Boulder").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-8942.234375, 49.40863800048828, -5691.60986328125)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("King Boulder").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.automlking
    else
        _G.automlking = false
    end
end)


folder:AddSwitch("Auto Muscle King Lift", function(bool)
    if bool then
        _G.automlking = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Muscle King Lift").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-8772.962890625, 51.2847785949707, -5662.82373046875)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Muscle King Lift").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.automlking
    else
        _G.automlking = false
    end
end)

-- Legends gym

folder:AddLabel("Legends ISland")


folder:AddSwitch("Auto Legends Press", function(bool)
    if bool then
        _G.autolegends = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Press").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(4097.8427734375, 996.5140380859375, -3787.60791015625)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Press").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autolegends
    else
        _G.autolegends = false
    end
end)

folder:AddSwitch("Auto Legends Squat", function(bool)
    if bool then
        _G.autolegends = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Squat").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(4439.38720703125, 1019.1768798828125, -4057.5859375)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Squat").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autolegends
    else
        _G.autolegends = false
    end
end)

folder:AddSwitch("Auto Legends Lift", function(bool)
    if bool then
        _G.autolegends = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Lift").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(4532.28466796875, 1023.3535766601562, -4002.943115234375)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Lift").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autolegends
    else
        _G.autolegends = false
    end
end)


folder:AddSwitch("Auto Legends Pullup", function(bool)
    if bool then
        _G.autolegends = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Pullup").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(4304.2138671875, 1020.4078369140625, -4121.30810546875)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Legends Pullup").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autolegends
    else
        _G.autolegends = false
    end
end)



local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local bodyVelocity
local connections = {}

local function enableKnockbackProtection()
    local character = player.Character
    if character then
        local humanoid = character:WaitForChild("Humanoid")
        local rootPart = character:WaitForChild("HumanoidRootPart")
        
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.MaxForce = Vector3.new(100000, 0, 100000)
        bodyVelocity.Parent = rootPart

        table.insert(connections, rootPart:GetPropertyChangedSignal("Velocity"):Connect(function()
            if _G.antiKnockback then
                rootPart.Velocity = Vector3.new(0, rootPart.Velocity.Y, 0)
            end
        end))

        table.insert(connections, humanoid:GetPropertyChangedSignal("PlatformStand"):Connect(function()
            if _G.antiKnockback and humanoid.PlatformStand then
                humanoid.PlatformStand = false
            end
        end))
    end
end

local function disableKnockbackProtection()
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
    for _, connection in ipairs(connections) do
        connection:Disconnect()
    end
    connections = {}
end

local function onCharacterAdded(character)
    if _G.antiKnockback then
        enableKnockbackProtection()
    end
end

if player.Character then
    onCharacterAdded(player.Character)
end

player.CharacterAdded:Connect(onCharacterAdded)

-- Create folder for features
local folder = features:AddFolder("OP things/farms")


-- Add switch to the folder
local switch = folder:AddSwitch("Anti Knockback", function(bool)
    _G.antiKnockback = bool
    if bool then
        enableKnockbackProtection()
    else
        disableKnockbackProtection()
    end
end)

_G.antiKnockback = _G.antiKnockback or false



-- Create the combined toggle inside the folder
local switch = folder:AddSwitch("Auto Pushup with Rock (5m) and Auto Punch", function(bool)
    local player = game:GetService("Players").LocalPlayer
    local backpack = player:FindFirstChild("Backpack")
    
    local autoFarmActive, equipPunchActive, pushupWithRockActive, autopunchActive = false, false, false, false

    -- Equip Pushup tool logic
    local function equipPushup()
        local toolName = "Pushups" -- Name of the tool to equip
        if backpack then
            local tool = backpack:FindFirstChild(toolName)
            if tool then
                player.Character.Humanoid:EquipTool(tool)
            end
        end
    end

    -- AutoFarm logic
    local function autoFarm()
        autoFarmActive = true
        while autoFarmActive do
            local args = { [1] = "rep" }
            player.muscleEvent:FireServer(unpack(args))
            game:GetService("RunService").RenderStepped:Wait()
        end
    end

    -- Auto Equip Punch logic
    local function equipPunch()
        equipPunchActive = true
        local function EquipPunch(p)
            local punchTool = p.Backpack:FindFirstChild("Punch")
            if punchTool and punchTool:IsA("Tool") and not p.Character:FindFirstChild("Punch") then
                punchTool.Parent = p.Character
            end
        end
        while equipPunchActive do
            for _, p in ipairs(game:GetService("Players"):GetPlayers()) do
                EquipPunch(p)
            end
            wait(0.1)
        end
    end

    -- Auto Pushup with Rock logic
    local function pushupWithRock()
        pushupWithRockActive = true
        local rock = game.workspace.machinesFolder and game.workspace.machinesFolder["Muscle King Mountain"] and game.workspace.machinesFolder["Muscle King Mountain"].Rock
        while pushupWithRockActive do
            if rock then
                firetouchinterest(rock, player.Character.LeftHand, 0)
                wait(0.01)
                firetouchinterest(rock, player.Character.LeftHand, 1)
            end
            wait(0.1)
        end
    end

    -- Auto Punch logic
    local function autoPunch()
        autopunchActive = true
        while autopunchActive do
            player.Character.Humanoid:EquipTool(player.Backpack:FindFirstChild("Punch"))
            local args = {
                [1] = "punch",
                [2] = "rightHand"
            }
            player.muscleEvent:FireServer(unpack(args))

            local args = {
                [1] = "punch",
                [2] = "leftHand"
            }
            player.muscleEvent:FireServer(unpack(args))
            game:GetService("RunService").RenderStepped:Wait()
        end
    end

    -- Execute functions based on toggle state
    if bool then
        -- Equip Pushup tool first
        equipPushup()

        -- Start AutoFarm, Auto Equip Punch, Auto Pushup with Rock, and Auto Punch
        spawn(autoFarm)
        spawn(equipPunch)
        spawn(pushupWithRock)
        spawn(autoPunch)
    else
        -- Stop AutoFarm, Auto Equip Punch, Auto Pushup with Rock, and Auto Punch
        autoFarmActive = false
        equipPunchActive = false
        pushupWithRockActive = false
        autopunchActive = false
        _G.autopunch = false
    end
end)

switch:Set(false)





local isToggled = false -- Variable to track toggle state

local toggleAllFunctions = folder:AddSwitch("Auto Glitch Muscle King", function(bool)
    isToggled = bool -- Update toggle state
    
    if bool then
        -- Muscle King Toggle Action
        spawn(function()
            while isToggled do
                firetouchinterest(game.workspace.machinesFolder["Muscle King Mountain"].Rock, game.Players.LocalPlayer.Character.LeftHand, 0)
                wait(0.01)
                firetouchinterest(game.workspace.machinesFolder["Muscle King Mountain"].Rock, game.Players.LocalPlayer.Character.LeftHand, 1)
            end
        end)

        -- Auto Equip Punch Toggle Action
        getgenv().EquipPunch = true
        spawn(function()
            while isToggled and getgenv().EquipPunch do
                local Players = game:GetService("Players")
                
                local function EquipPunch(player)
                    local punchTool = player.Backpack:FindFirstChild("Punch")
                    if punchTool and punchTool:IsA("Tool") then
                        if not player.Character:FindFirstChild("Punch") then
                            punchTool.Parent = player.Character
                        end
                    end
                end
                
                local function EquipPunchForAllPlayers()
                    for _, player in ipairs(Players:GetPlayers()) do
                        EquipPunch(player)
                    end
                end
                
                EquipPunchForAllPlayers()
                wait(0.1) -- Adjust the wait time as needed
            end
        end)

        -- Auto Punch Toggle Action
        _G.autopunch = true
        spawn(function()
            while isToggled and _G.autopunch do
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Punch"))
                
                local args = {
                    [1] = "punch",
                    [2] = "rightHand"
                }
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

                local args = {
                    [1] = "punch",
                    [2] = "leftHand"
                }
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))
                
                game:GetService("RunService").RenderStepped:Wait()
            end
        end)

        -- Safe Place TP Toggle Action
        local player = game.Players.LocalPlayer
        local character = player.Character
        local targetPosition = Vector3.new(5048.7060546875, 0, 24828.689453125)

        teleporting = true
        spawn(function()
            while isToggled and teleporting do
                if character then
                    character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
                end
                wait(0.5) -- Adjust the wait time as needed
            end
        end)
    else
        -- Stop all actions
        isToggled = false
        getgenv().EquipPunch = false
        _G.autopunch = false
        teleporting = false
    end
end)

toggleAllFunctions:Set(false) -- Set initial state to off

local isToggled = false -- Variable to track toggle state

local toggleAllFunctions = folder:AddSwitch("Auto Glitch Legends Gym", function(bool)
    isToggled = bool -- Update toggle state
    
    if bool then
        -- Muscle King Toggle Action
        spawn(function()
            while isToggled do
                firetouchinterest(game.workspace.machinesFolder["Rock Of Legends"].Rock, game.Players.LocalPlayer.Character.LeftHand, 0)
                wait(0.01)
                firetouchinterest(game.workspace.machinesFolder["Rock Of Legends"].Rock, game.Players.LocalPlayer.Character.LeftHand, 1)
            end
        end)

        -- Auto Equip Punch Toggle Action
        getgenv().EquipPunch = true
        spawn(function()
            while isToggled and getgenv().EquipPunch do
                local Players = game:GetService("Players")
                
                local function EquipPunch(player)
                    local punchTool = player.Backpack:FindFirstChild("Punch")
                    if punchTool and punchTool:IsA("Tool") then
                        if not player.Character:FindFirstChild("Punch") then
                            punchTool.Parent = player.Character
                        end
                    end
                end
                
                local function EquipPunchForAllPlayers()
                    for _, player in ipairs(Players:GetPlayers()) do
                        EquipPunch(player)
                    end
                end
                
                EquipPunchForAllPlayers()
                wait(0.1) -- Adjust the wait time as needed
            end
        end)

        -- Auto Punch Toggle Action
        _G.autopunch = true
        spawn(function()
            while isToggled and _G.autopunch do
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack:FindFirstChild("Punch"))
                
                local args = {
                    [1] = "punch",
                    [2] = "rightHand"
                }
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

                local args = {
                    [1] = "punch",
                    [2] = "leftHand"
                }
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))
                
                game:GetService("RunService").RenderStepped:Wait()
            end
        end)

        -- Safe Place TP Toggle Action
        local player = game.Players.LocalPlayer
        local character = player.Character
        local targetPosition = Vector3.new(5048.7060546875, 0, 24828.689453125)

        teleporting = true
        spawn(function()
            while isToggled and teleporting do
                if character then
                    character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
                end
                wait(0.5) -- Adjust the wait time as needed
            end
        end)
    else
        -- Stop all actions
        isToggled = false
        getgenv().EquipPunch = false
        _G.autopunch = false
        teleporting = false
    end
end)

toggleAllFunctions:Set(false) -- Set initial state to off


folder:AddButton("walk on water",function()
	local platformSize = Vector3.new(2048, 0, 2048)
    local distance = 0
    
    local numPlatformsX = 20
    local numPlatformsZ = 20
    
    for i = -numPlatformsX, numPlatformsX do
        for j = -numPlatformsZ, numPlatformsZ do
            local WalkPart = Instance.new("Part")
            WalkPart.Parent = game.Workspace
            WalkPart.Anchored = true
            WalkPart.Position = Vector3.new(i * (platformSize.X + distance), -9, j * (platformSize.Z + distance))
            WalkPart.Size = platformSize
            WalkPart.Transparency = 1
        end
    end
end)


folder:AddButton("Remove Ad Portal (They annoying fr)",function()
    game.Workspace.GameTeleportPortals:Destroy()
    game.Workspace.RobloxAdBoards:Destroy()
    game.Workspace.RobloxForwardPortals:Destroy()
end)


local args = {
	[1] = "disableTrading"
}

folder:AddButton("Disable trade",function()

game:GetService("ReplicatedStorage").rEvents.tradingEvent:FireServer(unpack(args))

end)

-- farm++
local features = window:AddTab("Farm++")


local folder = features:AddFolder("Auto Gym++")


-- infero gym

folder:AddLabel("Inferno ISland")


folder:AddSwitch("Auto Inferno Press", function(bool)
    if bool then
        _G.autoet = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Eternal Press").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-7162.3154296875, 12.490599632263184, -1088.469482421875)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Eternal Press").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autoet
    else
        _G.autoet = false
    end
end)

-- Mytical Gym

folder:AddLabel("Mythical ISland")


folder:AddSwitch("Auto Mythical Press", function(bool)
    if bool then
        _G.automy = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Mythical Press").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(2387.612060546875, 12.143051147460938, 1242.2725830078125)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Mythical Press").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.automy
    else
        _G.automy = false
    end
end)




-- frost gym

folder:AddLabel("Frost Island")


folder:AddSwitch("Auto Frost Press", function(bool)
    if bool then
        _G.autofrost = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Frost Press").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-3022.441650390625, 12.486576080322266, -324.4793701171875)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Frost Press").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autofrost
    else
        _G.autofrost = false
    end
end)

folder:AddSwitch("Auto Frost Lift", function(bool)
    if bool then
        _G.autofrost = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Frost Lift").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-2917.79833984375, 39.843353271484375, -209.55641174316406)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Frost Lift").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autofrost
    else
        _G.autofrost = false
    end
end)

folder:AddSwitch("Auto Frost Squat", function(bool)
    if bool then
        _G.autofrost = true
        repeat
            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "useMachine",
                [2] = workspace.machinesFolder:FindFirstChild("Frost Squat").interactSeat
            }

            game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer(unpack(args))

            local player = game.Players.LocalPlayer
            local character = player.Character
            local targetPosition = Vector3.new(-2720.13232421875, 29.353620529174805, -590.1256103515625)

            if character then
                character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
            end

            wait()

            -- Script generated by SimpleSpy - credits to exx#9394

            local args = {
                [1] = "rep",
                [2] = workspace.machinesFolder:FindFirstChild("Frost Squat").interactSeat
            }

            game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))

            game:GetService("RunService").RenderStepped:Wait()
        until not _G.autofrost
    else
        _G.autofrost = false
    end
end)


-- end 


-- folder 2

local folder = features:AddFolder("Rocks")

folder:AddLabel("----Auto Rocks----")

-- Function to handle the toggle actions
local function createToggle(rockName, displayName)
    local isToggled = false -- Variable to track toggle state

    local toggle = folder:AddSwitch(displayName, function(bool)
        isToggled = bool -- Update toggle state
        if bool then
            -- Start toggled action
            while isToggled do
                firetouchinterest(game.workspace.machinesFolder[rockName].Rock, game.Players.LocalPlayer.Character.LeftHand, 0)
                wait(0.01)
                firetouchinterest(game.workspace.machinesFolder[rockName].Rock, game.Players.LocalPlayer.Character.LeftHand, 1)
            end
        end
    end)
    toggle:Set(false) -- Set initial state to off
end

-- Create toggles for each rock
createToggle("Muscle King Mountain", "Muscle King (5m)")
createToggle("Rock Of Legends", "Legends Rock (1M)")
createToggle("Inferno Rock", "Inferno Rock (750k)")
createToggle("Frozen Rock", "Frozen Rock (150k)")
folder:AddLabel("----Other Rocks----")
createToggle("Punching Rock", "Golden Rock (5k)")
createToggle("Tiny Rock", "Tiny Rock (0+)")


folder:AddLabel("-----Use Auto Punch when using auto rock-----")

local folder = features:AddFolder("Auto Rock v2")

local teleporting = false
local characterConnection

-- Function to create the switch with teleport logic
local function addTeleportSwitch(switchName, targetPosition)
    local switch = folder:AddSwitch(switchName, function(isOn)
        local player = game.Players.LocalPlayer
        teleporting = isOn

        local function teleportToSafePlace()
            while teleporting do
                local character = player.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
                end
                wait(0.01)
            end
        end

        if isOn then
            teleportToSafePlace()

            if characterConnection then
                characterConnection:Disconnect() -- Prevent multiple connections
            end

            characterConnection = player.CharacterAdded:Connect(function()
                teleportToSafePlace() -- Resume teleporting when the player respawns
            end)
        else
            teleporting = false
            if characterConnection then
                characterConnection:Disconnect()
            end
        end
    end)

    switch:Set(false)
end

-- Add all switches using the reusable function
addTeleportSwitch("Muscle King (5m)", Vector3.new(-8974.83984375, 5.459519863128662, -6127.33447265625))
addTeleportSwitch("Legends Gym (1m)", Vector3.new(4130.71728515625, 989.16259765625, -4037.680419921875))
addTeleportSwitch("Inferno Gym (750k)", Vector3.new(-7258.7841796875, 3.58951735496521, -1219.5870361328125))
addTeleportSwitch("Mhytical Gym (400k)", Vector3.new(2192.34912109375, 3.589517593383789, 1288.5355224609375))
addTeleportSwitch("Frost Gym (150k)", Vector3.new(-2559.2861328125, 4.939487934112549, -204.34103393554688))

folder:AddLabel("-----Use Auto Punch (with animation) when using auto rock v2-----")


-- folder 3


getgenv().AutoTeleport = false
getgenv().AutoRebirth = false

local teleportLocation = Vector3.new(-8625, 15, -5730)

local folder = features:AddFolder("Rebirth (Use with caution!)")


local sizeToSet = 2
local autoSetSizeEnabled = false

-- Toggle for automatic size setting
folder:AddSwitch("Auto Set size 2", function(bool)
    autoSetSizeEnabled = bool
    if bool then
        spawn(function()
            while autoSetSizeEnabled do
                game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", sizeToSet)
                wait(0.2)
            end
        end)
    end
end)


local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(teleportLocation)
    end
end

local function startTeleportLoop()
    while getgenv().AutoTeleport do
        teleportPlayer()
        wait(0.1)
    end
end

local autoTeleportSwitch = folder:AddSwitch("Auto Teleport King", function(bool)
    getgenv().AutoTeleport = bool
    if bool then
        spawn(startTeleportLoop)
    end
end)
autoTeleportSwitch:Set(false)

local function startRebirthLoop()
    while getgenv().AutoRebirth do
        game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer("rebirthRequest")
        wait(0.5) -- Adjust the wait time as necessary to control the rebirth frequency
    end
end

local autoRebirthSwitch = folder:AddSwitch("Normal Auto Rebirth", function(bool)
    getgenv().AutoRebirth = bool
    if bool then
        spawn(startRebirthLoop)
    end
end)
autoRebirthSwitch:Set(false)


local rebirthsToHit = 0
local isFarming = false

features:AddTextBox("target rebirth", function(text)
    local value = tonumber(text)
    if value then
        rebirthsToHit = value
    end
end)

local switch = features:AddSwitch("Auto Rebirth on Target rebirths", function(state)
    isFarming = state
    if isFarming then
        FarmRebirths()
    end
end)

function FarmRebirths()
    local player = game.Players.LocalPlayer
    local rebirthsStat = player:WaitForChild("leaderstats"):WaitForChild("Rebirths")
    
    while isFarming do
        wait(1)
        local currentRebirths = rebirthsStat.Value

        if currentRebirths >= rebirthsToHit then
            isFarming = false
            return
        end

        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
               local args = {
                [1] = "rebirthRequest"
            }
            
            game:GetService("ReplicatedStorage").rEvents.rebirthRemote:InvokeServer(unpack(args))
        end
    end
end



-- folder 4

local folder = features:AddFolder("Auto Equip Weight Tools")

-- Function to create a toggle for auto-equipping a specific tool
local function createAutoEquipSwitch(name, toolName)
	local switch = folder:AddSwitch(name, function(bool)
		local player = game:GetService("Players").LocalPlayer
		
		local function equipTool()
			local backpack = player:FindFirstChild("Backpack")
			if backpack then
				local tool = backpack:FindFirstChild(toolName)
				if tool and not player.Character:FindFirstChild(toolName) then
					player.Character.Humanoid:EquipTool(tool)
				end
			end
		end
		
		local isActive = bool
		
		if isActive then
			equipTool()
			
			while isActive do
				local args = {
					[1] = "rep"
				}
				player.muscleEvent:FireServer(unpack(args))
				
				game:GetService("RunService").RenderStepped:Wait()
				
				-- Check and re-equip the tool if needed
				equipTool()
				
				isActive = bool -- Update the isActive status
			end
		end
		
		player.CharacterAdded:Connect(function(character)
			if bool then
				local humanoid = character:WaitForChild("Humanoid")
				equipTool()
			end
		end)
	end)

	switch:Set(false)
end

-- Create switches for each tool
createAutoEquipSwitch("Auto Weight", "Weight")
createAutoEquipSwitch("Auto Pushup", "Pushups")
createAutoEquipSwitch("Auto Handstands", "Handstands")
createAutoEquipSwitch("Auto Situps", "Situps")


folder:AddLabel("----Reset to be able to walk again----")


local features = window:Addtab("Misc")


local folder = features:AddFolder("Misc #1")

local switch = folder:AddSwitch("Auto Spin Fortune", function(bool)
    if bool then
            _G.autoSpin = true
            repeat
                    local args = {
[1] = "openFortuneWheel",
[2] = workspace:FindFirstChild("Fortune Wheel")
}

game:GetService("ReplicatedStorage").rEvents.openFortuneWheelRemote:InvokeServer(unpack(args))
            until not _G.autoSpin
    else
            _G.autoSpin = false
    end
end)

local switch = folder:AddSwitch("Hide Pets", function(bool)
    if bool then
        local args = {
            [1] = "hidePets"
        }
        
        game:GetService("ReplicatedStorage").rEvents.showPetsEvent:FireServer(unpack(args))
    else
        local args = {
            [1] = "showPets"
        }
        
        game:GetService("ReplicatedStorage").rEvents.showPetsEvent:FireServer(unpack(args))
    end
end)

folder:AddButton("AutoFarm weights (equip any farming tools)",function()
	while true do
		local args = {
			[1] = "rep"
		}

		game:GetService("Players").LocalPlayer.muscleEvent:FireServer(unpack(args))
		
		game:GetService("RunService").RenderStepped:Wait()
	end
end)


folder:AddButton("Fast weight (client side)(Uneqiup Weight first!)",function()
	game:GetService("Players").LocalPlayer.Backpack.Weight:FindFirstChildOfClass("NumberValue").Value = 0
end)

local Players = game:GetService("Players")
local player = Players.LocalPlayer

local teleportPositions = {
    Vector3.new(41.00082015991211, 7.25372314453125, 413.7836608886719),
    Vector3.new(-2569.714111328125, 7.253732681274414, -552.041259765625),
    Vector3.new(2202.354248046875, 7.253730773925781, 905.2389526367188),
    Vector3.new(-6710.41064453125, 7.253731727600098, -1458.2186279296875),
    Vector3.new(4663.82177734375, 1000.9722290039062, -3698.064208984375)
}

local function teleportToPositions()
    local originalPosition = player.Character.HumanoidRootPart.Position

    for _, position in ipairs(teleportPositions) do
        player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
        wait(1) -- Wait for 1 seconds at each position
    end

    player.Character.HumanoidRootPart.CFrame = CFrame.new(originalPosition)
end


folder:AddButton("claim all chest", function()
    teleportToPositions()
end)

folder:AddLabel("----Script Hub----")



folder:AddButton("Permanent Shiftlock",function()
	loadstring(game:HttpGet('https://pastebin.com/raw/CjNsnSDy'))()
end)



folder:AddLabel("----Time----")

folder:AddButton("Morning", function()
    game.Lighting.ClockTime = 7
end)

folder:AddButton("Daytime", function()
    game.Lighting.ClockTime = 8
end)

folder:AddButton("Night", function()
    game.Lighting.ClockTime = 5
end)

local folder = features:Addfolder("Misc #2")

folder:AddButton("Claim all chest V2",function()
    local args = {
        [1] = "groupRewards"
        }
        
        game:GetService("ReplicatedStorage").rEvents.groupRemote:InvokeServer(unpack(args))
        
                game:GetService("RunService").RenderStepped:Wait()
        
                local args = {
        [1] = "Golden Chest"
        }
        
        game:GetService("ReplicatedStorage").rEvents.checkChestRemote:InvokeServer(unpack(args))
                game:GetService("RunService").RenderStepped:Wait()
        
                local args = {
        [1] = "Enchanted Chest"
        }
        
        game:GetService("ReplicatedStorage").rEvents.checkChestRemote:InvokeServer(unpack(args))
        
                game:GetService("RunService").RenderStepped:Wait()
        
                local args = {
        [1] = "Enchanted Chest"
        }
        
        game:GetService("ReplicatedStorage").rEvents.checkChestRemote:InvokeServer(unpack(args))
        
                game:GetService("RunService").RenderStepped:Wait()
        
                local args = {
        [1] = "Mythical Chest"
        }
        
        game:GetService("ReplicatedStorage").rEvents.checkChestRemote:InvokeServer(unpack(args))
        
                game:GetService("RunService").RenderStepped:Wait()
        
                local args = {
        [1] = "Magma Chest"
        }
        
        game:GetService("ReplicatedStorage").rEvents.checkChestRemote:InvokeServer(unpack(args))
        
                game:GetService("RunService").RenderStepped:Wait()
        
                local args = {
        [1] = "Legends Chest"
        }
        
        game:GetService("ReplicatedStorage").rEvents.checkChestRemote:InvokeServer(unpack(args))
        
                game:GetService("RunService").RenderStepped:Wait()
    end)

folder:AddButton("Claim All Codes",function()
    local args = {
        [1] = "Epicreward500"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Frostgems10"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Galaxycrystal50"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Launch250"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Megalift50"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Millionwarriors"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Musclestorm50"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Spacegems50"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
    local args = {
        [1] = "Speedy50"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))

    local args = {
        [1] = "Skyagility50"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))

    local args = {
        [1] = "Supermuscle100"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))

    local args = {
        [1] = "Superpunch100"
    }

    game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("codeRemote"):InvokeServer(unpack(args))
end)

local switch = folder:AddSwitch("Fast Weight", function(bool)
    if bool then
        game:GetService("Players").LocalPlayer.Backpack.Weight:FindFirstChildOfClass("NumberValue").Value = 0.01
    else
        game:GetService("Players").LocalPlayer.Backpack.Weight:FindFirstChildOfClass("NumberValue").Value = 0.5
    end
end)

local switch = folder:AddSwitch("Fast Pushups", function(bool)
    if bool then
        game:GetService("Players").LocalPlayer.Backpack.Pushups:FindFirstChildOfClass("NumberValue").Value = 0.01
    else
        game:GetService("Players").LocalPlayer.Backpack.Pushups:FindFirstChildOfClass("NumberValue").Value = 0.5
    end
end)

local switch = folder:AddSwitch("Fast Situps", function(bool)
    if bool then
        game:GetService("Players").LocalPlayer.Backpack.Situps:FindFirstChildOfClass("NumberValue").Value = 0.01
    else
        game:GetService("Players").LocalPlayer.Backpack.Situps:FindFirstChildOfClass("NumberValue").Value = 0.5
    end
end)

local switch = folder:AddSwitch("Fast Handstands", function(bool)
    if bool then
        game:GetService("Players").LocalPlayer.Backpack.Handstands:FindFirstChildOfClass("NumberValue").Value = 0.01
    else
        game:GetService("Players").LocalPlayer.Backpack.Handstands:FindFirstChildOfClass("NumberValue").Value = 0.5
    end
end)


end
